rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check valid image
    function isValidImage() {
      return request.resource.size < 5 * 1024 * 1024 && // 5MB limit
             request.resource.contentType.matches('image/.*');
    }
    
    // Profile photos
    match /profile-photos/{userId} {
      // Users can read their own photo, admins can read all
      allow read: if isSignedIn();
      
      // Users can upload/update their own photo
      allow write: if isSignedIn() && 
                      request.auth.uid == userId && 
                      isValidImage();
    }
    
    // Team member photos
    match /team-members/{teamId}/{fileName} {
      // Anyone authenticated can read (for viewing team members)
      allow read: if isSignedIn();
      
      // Only team owner can upload member photos (validated via Firestore)
      allow write: if isSignedIn() && 
                      isValidImage() &&
                      firestore.get(/databases/(default)/documents/teams/$(teamId)).data.ownerId == request.auth.uid;
    }
  }
}
